{"version":3,"sources":["webpack:///path---blog-escaping-double-curlies-24bfd40b495ffe814e3a.js","webpack:///./.cache/json/blog-escaping-double-curlies.json"],"names":["webpackJsonp","559","module","exports","data","markdownRemark","html","frontmatter","date","path","title","type","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,ixFAA43EC,aAA2aC,KAAA,iBAAAC,KAAA,iCAAAC,MAAA,0BAAAC,KAAA,UAAkHC","file":"path---blog-escaping-double-curlies-24bfd40b495ffe814e3a.js","sourcesContent":["webpackJsonp([233547767048499],{\n\n/***/ 559:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Just lost an hour of my life trying to output double curly brackets from a Jekyll blog post in markdown to my blog. Angular relies on double curlies. Go uses double curlies. Liquid uses double curlies. Jekyll uses double curlies. I want to show my double curlies.</p>\\n<p>The issue is double curly brackets <code>{% raw %}{{ site.dlcb site.drcb }}{% endraw %}</code> are interpreted in liquid as interpolation so your curlies will (a) disappear on screen and (b) be interpreted as variables which is a real problem - it was crashing my blog!</p>\\n<p>So there are some solutions online. There are many people that love this one:</p>\\n<h3>Raw Ima Give it to Ya</h3>\\n<p>First a hat tip to <a href=\\\"http://goo.gl/yHdTLP\\\">SLaks</a> who told me via a 2 year old Stack Overflow post that one needs to write <code>raw</code> and <code>endraw</code> enclosed in the <code>&#x3C;% %></code> to escape the Angular double curlies in Jekyll so I could stop screwing up my blog with the code examples.</p>\\n<p>Didn't work for me in the context of a Jekyll blog post written in markdown but this is the credited response if otherwise on your site your code needs to output code-as-string.</p>\\n<h3>Notable Quotables</h3>\\n<p>Some people are escaping their double curlies with quotes. I refuse to do this because it makes it so unreadable. But if you think heiroglyphics were a good system, have at it <a href=\\\"http://stackoverflow.com/questions/3426182/how-to-escape-liquid-template-tags/5866429#5866429\\\">here</a> and enjoy your hell-world.</p>\\n<h3>Nate Eagle, a God among men</h3>\\n<p>This man NATE EAGLE saved me. <a href=\\\"http://nateeagle.com/2011/08/31/how-to-output-curly-brackets-in-jekyll/\\\">This solution</a> was the one that finally stopped the torture. In your <code>_config.yml</code> file set up two variables with the double curlies so you have</p>\\n<p><code>left-curly: '{{ site.dlcb }}'</code></p>\\n<p><code>right-curly: '{{ site.drcb }}'</code></p>\\n<p>And now within your post in markdown you can reference this with</p>\\n<p><code>{{ site.dlcb}} site.left-curly {{ site.drcb }}</code> some sweet code example <code>{{ site.dlcb}} site.right-curly {{ site.drcb }}</code></p>\\n<h3>Another Way. Go Raw</h3>\\n<p>You can also enclose your double curlies in a Jekyll raw / endraw tag. This would look like:</p>\\n<p>{{% raw %}}\\n{% raw %}\\n{{ look<em>at</em>my<em>double</em>curlies }}\\n{% endraw %}\\n{{% endraw %}}</p>\\n<h3>PRO TIPS FROM AN AMATEUR</h3>\\n<ol>\\n<li>Restart your server when you make changes to <code>config.yml</code></li>\\n<li>Write out your post normally with double curly brackets and just use a find-replace and thank me later</li>\\n<li>Make Mother's Day reservations a few weeks in advance, places really fill up.</li>\\n<li>Use single quotes and not double quotes in your variable assignment</li>\\n</ol>\",\"frontmatter\":{\"date\":\"April 21, 2016\",\"path\":\"/blog/escaping-double-curlies/\",\"title\":\"Escaping Double Curlies\",\"type\":\"blog\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-escaping-double-curlies-24bfd40b495ffe814e3a.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Just lost an hour of my life trying to output double curly brackets from a Jekyll blog post in markdown to my blog. Angular relies on double curlies. Go uses double curlies. Liquid uses double curlies. Jekyll uses double curlies. I want to show my double curlies.</p>\\n<p>The issue is double curly brackets <code>{% raw %}{{ site.dlcb site.drcb }}{% endraw %}</code> are interpreted in liquid as interpolation so your curlies will (a) disappear on screen and (b) be interpreted as variables which is a real problem - it was crashing my blog!</p>\\n<p>So there are some solutions online. There are many people that love this one:</p>\\n<h3>Raw Ima Give it to Ya</h3>\\n<p>First a hat tip to <a href=\\\"http://goo.gl/yHdTLP\\\">SLaks</a> who told me via a 2 year old Stack Overflow post that one needs to write <code>raw</code> and <code>endraw</code> enclosed in the <code>&#x3C;% %></code> to escape the Angular double curlies in Jekyll so I could stop screwing up my blog with the code examples.</p>\\n<p>Didn't work for me in the context of a Jekyll blog post written in markdown but this is the credited response if otherwise on your site your code needs to output code-as-string.</p>\\n<h3>Notable Quotables</h3>\\n<p>Some people are escaping their double curlies with quotes. I refuse to do this because it makes it so unreadable. But if you think heiroglyphics were a good system, have at it <a href=\\\"http://stackoverflow.com/questions/3426182/how-to-escape-liquid-template-tags/5866429#5866429\\\">here</a> and enjoy your hell-world.</p>\\n<h3>Nate Eagle, a God among men</h3>\\n<p>This man NATE EAGLE saved me. <a href=\\\"http://nateeagle.com/2011/08/31/how-to-output-curly-brackets-in-jekyll/\\\">This solution</a> was the one that finally stopped the torture. In your <code>_config.yml</code> file set up two variables with the double curlies so you have</p>\\n<p><code>left-curly: '{{ site.dlcb }}'</code></p>\\n<p><code>right-curly: '{{ site.drcb }}'</code></p>\\n<p>And now within your post in markdown you can reference this with</p>\\n<p><code>{{ site.dlcb}} site.left-curly {{ site.drcb }}</code> some sweet code example <code>{{ site.dlcb}} site.right-curly {{ site.drcb }}</code></p>\\n<h3>Another Way. Go Raw</h3>\\n<p>You can also enclose your double curlies in a Jekyll raw / endraw tag. This would look like:</p>\\n<p>{{% raw %}}\\n{% raw %}\\n{{ look<em>at</em>my<em>double</em>curlies }}\\n{% endraw %}\\n{{% endraw %}}</p>\\n<h3>PRO TIPS FROM AN AMATEUR</h3>\\n<ol>\\n<li>Restart your server when you make changes to <code>config.yml</code></li>\\n<li>Write out your post normally with double curly brackets and just use a find-replace and thank me later</li>\\n<li>Make Mother's Day reservations a few weeks in advance, places really fill up.</li>\\n<li>Use single quotes and not double quotes in your variable assignment</li>\\n</ol>\",\"frontmatter\":{\"date\":\"April 21, 2016\",\"path\":\"/blog/escaping-double-curlies/\",\"title\":\"Escaping Double Curlies\",\"type\":\"blog\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-escaping-double-curlies.json\n// module id = 559\n// module chunks = 233547767048499"],"sourceRoot":""}