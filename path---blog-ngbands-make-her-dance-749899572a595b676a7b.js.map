{"version":3,"sources":["webpack:///path---blog-ngbands-make-her-dance-749899572a595b676a7b.js","webpack:///./.cache/json/blog-ngbands-make-her-dance.json"],"names":["webpackJsonp","586","module","exports","data","markdownRemark","html","frontmatter","date","path","title","type","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,kvGAAohGC,aAAyRC,KAAA,iBAAAC,KAAA,gCAAAC,MAAA,yBAAAC,KAAA,UAAgHC","file":"path---blog-ngbands-make-her-dance-749899572a595b676a7b.js","sourcesContent":["webpackJsonp([88752836325773],{\n\n/***/ 586:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Pull the trigger until it goes ngClick</h2>\\n<p>Starting out nice and easy, <code>ngClick</code> is the Angular version of <code>.click()</code>. You can write <code>&#x3C;element ng-click=\\\"expression\\\">&#x3C;/element></code> and the Expression evaluates on click.</p>\\n<p><a href=\\\"https://docs.angularjs.org/api/ng/directive/ngClick\\\">Angular documentation on ngClick</a></p>\\n<h2>ngShow me the Money</h2>\\n<p>I am so, so sorry. The Dad jokes flow through me and if I don't type them they just will not leave my brain. It is an exorcism. <code>ngShow</code> is Angular's version of <code>.show()</code> for the record. The Angular inverse is... ngHide. Amazing.</p>\\n<p><a href=\\\"https://docs.angularjs.org/api/ng/directive/ngShow\\\">Angular documentation on ngShow</a></p>\\n<h2>Nowhere to run to baby, nowhere to ngHide</h2>\\n<p>I wish I could make this punning stop. <code>ngHide</code> does as advertised, hides elements. It works in tandem with ngShow. You can use <code>ng-hide=\\\"someValue\\\"</code>, you can set <code>class=\\\"ng-hide\\\"</code> or both.</p>\\n<p><a href=\\\"https://docs.angularjs.org/api/ng/directive/ngHide\\\">Angular documentation on ngHide</a></p>\\n<h3>Ha Ha Ha how the f*!@ do I use this thing</h3>\\n<p>In Angular you can write <code>&#x3C;div ng-show=\\\"someValue\\\">&#x3C;/div></code> and if <code>someValue</code> is true (well, truthy) the element shows. You can write <code>&#x3C;div ng-show=\\\"myValue\\\" class=\\\"ng-hide\\\">&#x3C;/div></code> so that if myValue is true, it shows, else, it hides the element, making it explicit.  ngShow will set the CSS of that element <code>display: none</code> (which feels a bit familiar and jQuery-esque).</p>\\n<p>You can override or change ngHide in CSS by just defining a .ng-hide {} series of styles and moving the element off-screen.</p>\\n<h3>ngInclude-r alert</h3>\\n<p>The directive <code>ng-include</code> is built in to Angular and allows you to bring  outside templates into your view. Very similar to how you would bring in a partial in rails in concept, but using HTML which I find so cool</p>\\n<pre><code class=\\\"language-html\\\"> &#x3C;ng-include src=\\\"'/templates/some_cool_file.html'\\\">&#x3C;/ng-include>\\n</code></pre>\\n<h3>ngMouseover Beethoven (and ngMouseleave)</h3>\\n<p> Worst pun yet. I can't apologize enough. These two Angular directives launch expressions based on mouse position vis a vis the associated element. <code>&#x3C;element ng-mouseover=\\\"expression1\\\" ng-mouseleave=\\\"expression2\\\">&#x3C;/element></code></p>\\n<p><a href=\\\"https://docs.angularjs.org/api/ng/directive/ngMouseover\\\">Angular documentaton on ngMouseover</a></p>\\n<p><a href=\\\"https://docs.angularjs.org/api/ng/directive/ngMouseleave\\\">Angular documentation on ngMouseleave</a></p>\\n<h3>ngInit Picky</h3>\\n<p>OK I had one more in me. <code>ngInit</code> sets an initial value for elements (or rather,  variables associated with an element).</p>\\n<pre><code class=\\\"language-javascript\\\">&#x3C;button ng-mouseover=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n  Increment (when mouse is over)\\n&#x3C;/button>\\ncount: {{count}}\\n</code></pre>\\n<p><a href=\\\"https://docs.angularjs.org/api/ng/directive/ngInit\\\">Angular documentation for ngInit</a></p>\\n<p>Gratuitious Big Lebowski Reference <img src=\\\"http://assets.sbnation.com/imported_assets/81090/jesus_medium.jpg\\\" alt=\\\"The Jesus\\\"></p>\",\"frontmatter\":{\"date\":\"March 31, 2016\",\"path\":\"/blog/ngbands-make-her-dance/\",\"title\":\"ngBands Make Her Dance\",\"type\":\"blog\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-ngbands-make-her-dance-749899572a595b676a7b.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Pull the trigger until it goes ngClick</h2>\\n<p>Starting out nice and easy, <code>ngClick</code> is the Angular version of <code>.click()</code>. You can write <code>&#x3C;element ng-click=\\\"expression\\\">&#x3C;/element></code> and the Expression evaluates on click.</p>\\n<p><a href=\\\"https://docs.angularjs.org/api/ng/directive/ngClick\\\">Angular documentation on ngClick</a></p>\\n<h2>ngShow me the Money</h2>\\n<p>I am so, so sorry. The Dad jokes flow through me and if I don't type them they just will not leave my brain. It is an exorcism. <code>ngShow</code> is Angular's version of <code>.show()</code> for the record. The Angular inverse is... ngHide. Amazing.</p>\\n<p><a href=\\\"https://docs.angularjs.org/api/ng/directive/ngShow\\\">Angular documentation on ngShow</a></p>\\n<h2>Nowhere to run to baby, nowhere to ngHide</h2>\\n<p>I wish I could make this punning stop. <code>ngHide</code> does as advertised, hides elements. It works in tandem with ngShow. You can use <code>ng-hide=\\\"someValue\\\"</code>, you can set <code>class=\\\"ng-hide\\\"</code> or both.</p>\\n<p><a href=\\\"https://docs.angularjs.org/api/ng/directive/ngHide\\\">Angular documentation on ngHide</a></p>\\n<h3>Ha Ha Ha how the f*!@ do I use this thing</h3>\\n<p>In Angular you can write <code>&#x3C;div ng-show=\\\"someValue\\\">&#x3C;/div></code> and if <code>someValue</code> is true (well, truthy) the element shows. You can write <code>&#x3C;div ng-show=\\\"myValue\\\" class=\\\"ng-hide\\\">&#x3C;/div></code> so that if myValue is true, it shows, else, it hides the element, making it explicit.  ngShow will set the CSS of that element <code>display: none</code> (which feels a bit familiar and jQuery-esque).</p>\\n<p>You can override or change ngHide in CSS by just defining a .ng-hide {} series of styles and moving the element off-screen.</p>\\n<h3>ngInclude-r alert</h3>\\n<p>The directive <code>ng-include</code> is built in to Angular and allows you to bring  outside templates into your view. Very similar to how you would bring in a partial in rails in concept, but using HTML which I find so cool</p>\\n<pre><code class=\\\"language-html\\\"> &#x3C;ng-include src=\\\"'/templates/some_cool_file.html'\\\">&#x3C;/ng-include>\\n</code></pre>\\n<h3>ngMouseover Beethoven (and ngMouseleave)</h3>\\n<p> Worst pun yet. I can't apologize enough. These two Angular directives launch expressions based on mouse position vis a vis the associated element. <code>&#x3C;element ng-mouseover=\\\"expression1\\\" ng-mouseleave=\\\"expression2\\\">&#x3C;/element></code></p>\\n<p><a href=\\\"https://docs.angularjs.org/api/ng/directive/ngMouseover\\\">Angular documentaton on ngMouseover</a></p>\\n<p><a href=\\\"https://docs.angularjs.org/api/ng/directive/ngMouseleave\\\">Angular documentation on ngMouseleave</a></p>\\n<h3>ngInit Picky</h3>\\n<p>OK I had one more in me. <code>ngInit</code> sets an initial value for elements (or rather,  variables associated with an element).</p>\\n<pre><code class=\\\"language-javascript\\\">&#x3C;button ng-mouseover=\\\"count = count + 1\\\" ng-init=\\\"count=0\\\">\\n  Increment (when mouse is over)\\n&#x3C;/button>\\ncount: {{count}}\\n</code></pre>\\n<p><a href=\\\"https://docs.angularjs.org/api/ng/directive/ngInit\\\">Angular documentation for ngInit</a></p>\\n<p>Gratuitious Big Lebowski Reference <img src=\\\"http://assets.sbnation.com/imported_assets/81090/jesus_medium.jpg\\\" alt=\\\"The Jesus\\\"></p>\",\"frontmatter\":{\"date\":\"March 31, 2016\",\"path\":\"/blog/ngbands-make-her-dance/\",\"title\":\"ngBands Make Her Dance\",\"type\":\"blog\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-ngbands-make-her-dance.json\n// module id = 586\n// module chunks = 88752836325773"],"sourceRoot":""}